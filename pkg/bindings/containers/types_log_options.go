// Code generated by go generate; DO NOT EDIT.
package containers

import (
	"net/url"

	"github.com/containers/podman/v3/pkg/bindings/internal/util"
)

// Changed returns true if named field has been set
func (o *LogOptions) Changed(fieldName string) bool {
	return util.Changed(o, fieldName)
}

// ToParams formats struct fields to be passed to API service
func (o *LogOptions) ToParams() (url.Values, error) {
	return util.ToParams(o)
}

// WithFollow set field Follow to given value
func (o *LogOptions) WithFollow(value bool) *LogOptions {
	o.Follow = &value
	return o
}

// GetFollow returns value of field Follow
func (o *LogOptions) GetFollow() bool {
	if o.Follow == nil {
		var z bool
		return z
	}
	return *o.Follow
}

// WithSince set field Since to given value
func (o *LogOptions) WithSince(value string) *LogOptions {
	o.Since = &value
	return o
}

// GetSince returns value of field Since
func (o *LogOptions) GetSince() string {
	if o.Since == nil {
		var z string
		return z
	}
	return *o.Since
}

// WithStderr set field Stderr to given value
func (o *LogOptions) WithStderr(value bool) *LogOptions {
	o.Stderr = &value
	return o
}

// GetStderr returns value of field Stderr
func (o *LogOptions) GetStderr() bool {
	if o.Stderr == nil {
		var z bool
		return z
	}
	return *o.Stderr
}

// WithStdout set field Stdout to given value
func (o *LogOptions) WithStdout(value bool) *LogOptions {
	o.Stdout = &value
	return o
}

// GetStdout returns value of field Stdout
func (o *LogOptions) GetStdout() bool {
	if o.Stdout == nil {
		var z bool
		return z
	}
	return *o.Stdout
}

// WithTail set field Tail to given value
func (o *LogOptions) WithTail(value string) *LogOptions {
	o.Tail = &value
	return o
}

// GetTail returns value of field Tail
func (o *LogOptions) GetTail() string {
	if o.Tail == nil {
		var z string
		return z
	}
	return *o.Tail
}

// WithTimestamps set field Timestamps to given value
func (o *LogOptions) WithTimestamps(value bool) *LogOptions {
	o.Timestamps = &value
	return o
}

// GetTimestamps returns value of field Timestamps
func (o *LogOptions) GetTimestamps() bool {
	if o.Timestamps == nil {
		var z bool
		return z
	}
	return *o.Timestamps
}

// WithUntil set field Until to given value
func (o *LogOptions) WithUntil(value string) *LogOptions {
	o.Until = &value
	return o
}

// GetUntil returns value of field Until
func (o *LogOptions) GetUntil() string {
	if o.Until == nil {
		var z string
		return z
	}
	return *o.Until
}
