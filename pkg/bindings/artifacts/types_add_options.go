// Code generated by go generate; DO NOT EDIT.
package artifacts

import (
	"net/url"

	"github.com/containers/podman/v5/pkg/bindings/internal/util"
)

// Changed returns true if named field has been set
func (o *AddOptions) Changed(fieldName string) bool {
	return util.Changed(o, fieldName)
}

// ToParams formats struct fields to be passed to API service
func (o *AddOptions) ToParams() (url.Values, error) {
	return util.ToParams(o)
}

// WithAnnotations set field Annotations to given value
func (o *AddOptions) WithAnnotations(value []string) *AddOptions {
	o.Annotations = value
	return o
}

// GetAnnotations returns value of field Annotations
func (o *AddOptions) GetAnnotations() []string {
	if o.Annotations == nil {
		var z []string
		return z
	}
	return o.Annotations
}

// WithArtifactMIMEType set field ArtifactMIMEType to given value
func (o *AddOptions) WithArtifactMIMEType(value string) *AddOptions {
	o.ArtifactMIMEType = &value
	return o
}

// GetArtifactMIMEType returns value of field ArtifactMIMEType
func (o *AddOptions) GetArtifactMIMEType() string {
	if o.ArtifactMIMEType == nil {
		var z string
		return z
	}
	return *o.ArtifactMIMEType
}

// WithAppend set field Append to given value
func (o *AddOptions) WithAppend(value bool) *AddOptions {
	o.Append = &value
	return o
}

// GetAppend returns value of field Append
func (o *AddOptions) GetAppend() bool {
	if o.Append == nil {
		var z bool
		return z
	}
	return *o.Append
}

// WithFileMIMEType set field FileMIMEType to given value
func (o *AddOptions) WithFileMIMEType(value string) *AddOptions {
	o.FileMIMEType = &value
	return o
}

// GetFileMIMEType returns value of field FileMIMEType
func (o *AddOptions) GetFileMIMEType() string {
	if o.FileMIMEType == nil {
		var z string
		return z
	}
	return *o.FileMIMEType
}
